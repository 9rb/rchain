/*
 The table below describes the required computations and their dependencies

 No. | Dependency | Computation method | Result
 ----+------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------
 1.  |            | given              | sk = 291aaf3c5278221d81d06a463cc5ea9fa6ff773a3f2c7f62da5bd0efd92f3839
 2.  |            | given              | timestamp = 1559156320965
 3.  |            | lastNonce          | nonce = 9223372036854775807
 4.  | 1,         | secp256k1          | pk = 0481acb8311189b166adf15aa021caacfd4bc224234d39311e8bf533e73d71f408b8c5ade7304b7556c5a6317593cb8089268294cdd3b5b8feb6819986c74aa0af
 5.  | 4, 2,      | genIds             | uname = Unforgeable(0x6cd75a683533af49eb9d8cd1d71fc24577cfa6099502eef95668d7a0a9887686)
 6.  | 3, 5,      | registry           | value = (9223372036854775807, bundle+ {   Unforgeable(0x6cd75a683533af49eb9d8cd1d71fc24577cfa6099502eef95668d7a0a9887686) })
 7.  | 6,         | protobuf           | toSign = 2a40aa013d0a0d2a0b10feffffffffffffffff010a2c5a2a0a263a240a220a206cd75a683533af49eb9d8cd1d71fc24577cfa6099502eef95668d7a0a98876861001
 8.  | 7, 1,      | secp256k1          | sig = 304402201b6599bb8eec26c32c56cffa5b74a78ef57988576bab94b734e613dd56309c5a02205e64001e57d8888f93c78cf2064a4d4338b0062281c9e56c8a480ca001b03c95
 9.  | 4,         | registry           | uri = rho:id:i41dt8gymg1d3ar7ditjwxmtnqtuw6chznhxci3696tffyrd3ppeaf
 ----+------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------
 */
new 
  SystemInstancesRegistry, rs(`rho:registry:insertSigned:secp256k1`), uriOut,
  posStore, revStore
in {
  contract SystemInstancesRegistry(@"lookup", @systemContract, return) = {
    match systemContract {
      "pos"        => { for(@value <- posStore)       { return!(value) | posStore!(value) } }
      "rev"        => { for(@value <- revStore)       { return!(value) | revStore!(value) } }
      _            => { return!(Nil) }
    }
  } |

  //one time use only call for registering a proof-of-stake instance
  for(@"register", @"pos", @value <- SystemInstancesRegistry) {
    posStore!(value)
  } |
  
  //one time use only call for registering a rev-mint instance
  for(@"register", @"rev", @value <- SystemInstancesRegistry) {
    revStore!(value)
  } |
  
  rs!(
    "0481acb8311189b166adf15aa021caacfd4bc224234d39311e8bf533e73d71f408b8c5ade7304b7556c5a6317593cb8089268294cdd3b5b8feb6819986c74aa0af".hexToBytes(),
    (9223372036854775807, bundle+{*SystemInstancesRegistry}),
    "304402201b6599bb8eec26c32c56cffa5b74a78ef57988576bab94b734e613dd56309c5a02205e64001e57d8888f93c78cf2064a4d4338b0062281c9e56c8a480ca001b03c95".hexToBytes(),
    *uriOut
  )
}
  
  
